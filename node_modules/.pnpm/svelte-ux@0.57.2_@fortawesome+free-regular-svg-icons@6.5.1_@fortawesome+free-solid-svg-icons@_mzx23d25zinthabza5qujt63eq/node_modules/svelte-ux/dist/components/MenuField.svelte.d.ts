import { SvelteComponentTyped } from "svelte";
import type { ComponentProps } from '../types';
import Menu from './Menu.svelte';
import MenuItem from './MenuItem.svelte';
import type { MenuOption } from '../types/options';
declare const __propDef: {
    props: {
        [x: string]: any;
        options?: MenuOption[] | undefined;
        value?: any;
        menuProps?: ComponentProps<Menu> | undefined;
        menuIcon?: string | undefined;
        stepper?: boolean | undefined;
        classes?: ({
            root?: string | undefined;
            container?: string | undefined;
            label?: string | undefined;
            input?: string | undefined;
            error?: string | undefined;
            prepend?: string | undefined;
            append?: string | undefined;
        } & {
            option?: string | undefined;
            menuItem?: ComponentProps<MenuItem>['classes'];
            menuIcon?: string | undefined;
            group?: string | undefined;
        }) | undefined;
    };
    events: {
        change: CustomEvent<any>;
    } & {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        selection: {};
        prepend: {};
        append: {};
        default: {
            options: MenuOption[];
            selected: MenuOption | undefined;
            close: () => boolean;
            setValue: (val: any) => void;
        };
    };
};
export type MenuFieldProps = typeof __propDef.props;
export type MenuFieldEvents = typeof __propDef.events;
export type MenuFieldSlots = typeof __propDef.slots;
export default class MenuField extends SvelteComponentTyped<MenuFieldProps, MenuFieldEvents, MenuFieldSlots> {
}
export {};
