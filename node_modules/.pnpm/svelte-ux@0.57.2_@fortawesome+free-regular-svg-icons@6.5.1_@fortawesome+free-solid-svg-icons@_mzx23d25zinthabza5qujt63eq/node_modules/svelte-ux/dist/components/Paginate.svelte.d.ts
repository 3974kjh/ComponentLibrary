import { SvelteComponentTyped } from "svelte";
declare const __propDef: {
    props: {
        items: any[];
        perPage?: number | undefined;
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        default: {
            pagination: {
                subscribe: (this: void, run: import("svelte/store").Subscriber<{
                    page: number;
                    perPage: number;
                    total: number;
                    from: number;
                    to: number;
                    totalPages: number;
                    isFirst: boolean;
                    isLast: boolean;
                    hasPrevious: boolean;
                    hasNext: boolean;
                    slice(items: any[]): any[];
                }>, invalidate?: import("svelte/store").Invalidator<{
                    page: number;
                    perPage: number;
                    total: number;
                    from: number;
                    to: number;
                    totalPages: number;
                    isFirst: boolean;
                    isLast: boolean;
                    hasPrevious: boolean;
                    hasNext: boolean;
                    slice(items: any[]): any[];
                }> | undefined) => import("svelte/store").Unsubscriber;
                nextPage(): void;
                prevPage(): void;
                firstPage(): void;
                lastPage(): void;
                setPage(page: number): void;
                setPerPage(perPage: number): void;
                setTotal(total: number): void;
            };
            pageItems: any[];
        };
    };
};
export type PaginateProps = typeof __propDef.props;
export type PaginateEvents = typeof __propDef.events;
export type PaginateSlots = typeof __propDef.slots;
export default class Paginate extends SvelteComponentTyped<PaginateProps, PaginateEvents, PaginateSlots> {
}
export {};
