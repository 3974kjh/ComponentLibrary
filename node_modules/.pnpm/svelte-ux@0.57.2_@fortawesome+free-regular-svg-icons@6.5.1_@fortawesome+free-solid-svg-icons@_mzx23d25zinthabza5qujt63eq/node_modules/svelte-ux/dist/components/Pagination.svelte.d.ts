import { SvelteComponentTyped } from "svelte";
import type { StoresValues } from '../types/typeHelpers';
declare const __propDef: {
    props: {
        [x: string]: any;
        pagination: {
            subscribe: (this: void, run: import("svelte/store").Subscriber<{
                page: number;
                perPage: number;
                total: number;
                from: number;
                to: number;
                totalPages: number;
                isFirst: boolean;
                isLast: boolean;
                hasPrevious: boolean;
                hasNext: boolean;
                slice(items: any[]): any[];
            }>, invalidate?: import("svelte/store").Invalidator<{
                page: number;
                perPage: number;
                total: number;
                from: number;
                to: number;
                totalPages: number;
                isFirst: boolean;
                isLast: boolean;
                hasPrevious: boolean;
                hasNext: boolean;
                slice(items: any[]): any[];
            }> | undefined) => import("svelte/store").Unsubscriber;
            nextPage(): void;
            prevPage(): void;
            firstPage(): void;
            lastPage(): void;
            setPage(page: number): void;
            setPerPage(perPage: number): void;
            setTotal(total: number): void;
        };
        perPageOptions?: number[] | undefined;
        hideSinglePage?: boolean | undefined;
        format?: ((pagination: {
            page: number;
            perPage: number;
            total: number;
            from: number;
            to: number;
            totalPages: number;
            isFirst: boolean;
            isLast: boolean;
            hasPrevious: boolean;
            hasNext: boolean;
            slice(items: any[]): any[];
        }) => string) | undefined;
        show?: ("actions" | "perPage" | "prevPage" | "nextPage" | "firstPage" | "lastPage" | "pagination")[] | undefined;
        classes?: {
            root?: string | undefined;
            buttons?: string | undefined;
            pagination?: string | undefined;
            perPage?: string | undefined;
        } | undefined;
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        actions: {};
        pagination: {
            pagination: {
                page: number;
                perPage: number;
                total: number;
                from: number;
                to: number;
                totalPages: number;
                isFirst: boolean;
                isLast: boolean;
                hasPrevious: boolean;
                hasNext: boolean;
                slice(items: any[]): any[];
            };
        };
    };
};
export type PaginationProps = typeof __propDef.props;
export type PaginationEvents = typeof __propDef.events;
export type PaginationSlots = typeof __propDef.slots;
export default class Pagination extends SvelteComponentTyped<PaginationProps, PaginationEvents, PaginationSlots> {
}
export {};
