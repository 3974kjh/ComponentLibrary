import { SvelteComponentTyped } from "svelte";
declare class __sveltets_Render<T> {
    props(): {
        initial?: any[] | undefined;
        all?: any[] | undefined;
        single?: boolean | undefined;
    };
    events(): {} & {
        [evt: string]: CustomEvent<any>;
    };
    slots(): {
        default: {
            selected: any;
            isSelected: (value: any) => boolean;
            toggleAll: () => void;
            toggleSelected: (value: any) => void;
            isAllSelected: () => boolean;
            isAnySelected: () => boolean;
            clear: () => void;
        };
    };
}
export type SelectionProps<T> = ReturnType<__sveltets_Render<T>['props']>;
export type SelectionEvents<T> = ReturnType<__sveltets_Render<T>['events']>;
export type SelectionSlots<T> = ReturnType<__sveltets_Render<T>['slots']>;
export default class Selection<T> extends SvelteComponentTyped<SelectionProps<T>, SelectionEvents<T>, SelectionSlots<T>> {
}
export {};
