import { SvelteComponentTyped } from "svelte";
import { slide } from 'svelte/transition';
import type { TransitionConfig } from 'svelte/transition';
import type { Placement } from '@floating-ui/dom';
import type { TransitionParams } from '../types';
declare const __propDef: {
    props: {
        [x: string]: any;
        open?: boolean | undefined;
        offset?: number | undefined;
        matchWidth?: boolean | undefined;
        placement?: Placement | undefined;
        autoPlacement?: boolean | undefined;
        resize?: boolean | undefined;
        disableTransition?: boolean | undefined;
        transition?: typeof slide | ((node: HTMLElement, params: TransitionParams) => TransitionConfig) | undefined;
        transitionParams?: TransitionParams | undefined;
        explicitClose?: boolean | undefined;
        moveFocus?: boolean | undefined;
        classes?: {
            root?: string | undefined;
            menu?: string | undefined;
        } | undefined;
        menuItemsEl?: HTMLMenuElement | undefined;
    };
    events: {
        close: CustomEvent<any>;
    } & {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        default: {
            close: (reason?: string) => void;
        };
    };
};
export type MenuProps = typeof __propDef.props;
export type MenuEvents = typeof __propDef.events;
export type MenuSlots = typeof __propDef.slots;
export default class Menu extends SvelteComponentTyped<MenuProps, MenuEvents, MenuSlots> {
}
export {};
