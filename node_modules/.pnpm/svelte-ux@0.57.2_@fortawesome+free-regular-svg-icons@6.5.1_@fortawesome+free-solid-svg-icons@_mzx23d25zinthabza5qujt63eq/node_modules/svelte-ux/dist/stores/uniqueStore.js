import { writable } from 'svelte/store';
/**
 * Store to manage unique values using `Set` with improves ergonomics and better control of updates
 */
export default function uniqueStore(initialValues) {
    const store = writable(new Set(initialValues ?? []));
    return {
        ...store,
        add(value) {
            store.update((set) => {
                set.add(value);
                return set;
            });
        },
        addEach(values) {
            store.update((set) => {
                values.forEach((value) => set.add(value));
                return set;
            });
        },
        delete(value) {
            store.update((set) => {
                set.delete(value);
                return set;
            });
        },
        toggle(value) {
            store.update((set) => {
                if (set.has(value)) {
                    set.delete(value);
                }
                else {
                    set.add(value);
                }
                return set;
            });
        },
    };
}
