/// <reference types="svelte" />
export type PromiseStoreData<T> = {
    loading: boolean;
    data?: T;
    error?: Error;
    aborted?: boolean;
};
/**
 * Wraps a Promise as a store.  Useful for SvelteKit streamed data handling
 */
export declare function promiseStore<T>(initialValue?: Promise<T> | null): {
    subscribe: (this: void, run: import("svelte/store").Subscriber<PromiseStoreData<T>>, invalidate?: import("svelte/store").Invalidator<PromiseStoreData<T>> | undefined) => import("svelte/store").Unsubscriber;
    setPromise(promise: Promise<T> | undefined): Promise<void>;
};
