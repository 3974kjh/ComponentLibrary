import { writable } from 'svelte/store';
import { isFunction } from 'lodash-es';
import { sortFunc } from '../utils/sort';
export default function tableOrderStore(props) {
    const state = writable({
        by: props?.initialBy ?? '',
        direction: props?.initialDirection ?? 'asc',
        handler: props?.initialHandler ?? sortFunc(props?.initialBy, props?.initialDirection ?? 'asc'),
    });
    function onHeaderClick(column) {
        state.update((prevState) => {
            const by = typeof column.orderBy === 'string'
                ? column.orderBy
                : typeof column.value === 'string'
                    ? column.value
                    : column.name;
            const direction = prevState.by === by && prevState.direction === 'asc' ? 'desc' : 'asc';
            let handler = undefined;
            if (isFunction(column.orderBy)) {
                handler = column.orderBy;
            }
            else if (typeof column.orderBy === 'string') {
                handler = sortFunc(column.orderBy, direction);
            }
            else {
                handler = sortFunc(column.value ?? column.name, direction);
            }
            return {
                by,
                direction,
                handler,
            };
        });
    }
    return {
        ...state,
        onHeaderClick,
    };
}
