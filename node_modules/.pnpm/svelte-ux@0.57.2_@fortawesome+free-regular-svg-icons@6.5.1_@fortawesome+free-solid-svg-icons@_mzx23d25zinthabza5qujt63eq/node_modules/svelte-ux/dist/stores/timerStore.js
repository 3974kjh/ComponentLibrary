import { writable } from 'svelte/store';
/**
 * Subscribable timer store
 */
export default function timerStore(options = {}) {
    let initial = options.initial ?? null;
    let intervalId = null;
    let delay = options.delay ?? 1000;
    const isRunning = writable(false);
    const state = writable(initial, () => {
        if (!options.disabled) {
            start();
        }
        return () => stop();
    });
    function start() {
        stop();
        intervalId = setInterval(() => {
            state.update((current) => options.onTick?.(current) ?? new Date());
        }, delay);
        isRunning.set(true);
    }
    function stop() {
        if (intervalId) {
            clearInterval(intervalId);
        }
        intervalId = null;
        isRunning.set(false);
    }
    function reset() {
        return state.set(initial);
    }
    function getDelay() {
        return delay;
    }
    function setDelay(value) {
        stop();
        delay = value;
        start();
    }
    return {
        ...state,
        start,
        stop,
        reset,
        isRunning,
        getDelay,
        setDelay,
    };
}
