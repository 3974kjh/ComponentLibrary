/// <reference types="svelte" />
export type PaginationProps = {
    page?: number;
    perPage?: number;
    total?: number;
};
export default function paginationStore(props?: PaginationProps): {
    subscribe: (this: void, run: import("svelte/store").Subscriber<{
        page: number;
        perPage: number;
        total: number;
        from: number;
        to: number;
        totalPages: number;
        isFirst: boolean;
        isLast: boolean;
        hasPrevious: boolean;
        hasNext: boolean;
        slice(items: any[]): any[];
    }>, invalidate?: import("svelte/store").Invalidator<{
        page: number;
        perPage: number;
        total: number;
        from: number;
        to: number;
        totalPages: number;
        isFirst: boolean;
        isLast: boolean;
        hasPrevious: boolean;
        hasNext: boolean;
        slice(items: any[]): any[];
    }> | undefined) => import("svelte/store").Unsubscriber;
    nextPage(): void;
    prevPage(): void;
    firstPage(): void;
    lastPage(): void;
    setPage(page: number): void;
    setPerPage(perPage: number): void;
    setTotal(total: number): void;
};
