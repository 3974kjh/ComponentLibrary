/// <reference types="svelte" />
import type { ColumnDef } from '../types/table';
type SortFunc = (a: any, b: any) => number;
type OrderDirection = 'asc' | 'desc';
export type TableOrderState = {
    by: string;
    direction: OrderDirection;
    handler?: SortFunc;
};
export type TableOrderProps = {
    initialBy?: string;
    initialDirection?: OrderDirection;
    initialHandler?: SortFunc;
};
export default function tableOrderStore(props?: TableOrderProps): {
    onHeaderClick: (column: ColumnDef) => void;
    set(this: void, value: {
        by: string;
        direction: OrderDirection;
        handler: (a: any, b: any) => number;
    }): void;
    update(this: void, updater: import("svelte/store").Updater<{
        by: string;
        direction: OrderDirection;
        handler: (a: any, b: any) => number;
    }>): void;
    subscribe(this: void, run: import("svelte/store").Subscriber<{
        by: string;
        direction: OrderDirection;
        handler: (a: any, b: any) => number;
    }>, invalidate?: import("svelte/store").Invalidator<{
        by: string;
        direction: OrderDirection;
        handler: (a: any, b: any) => number;
    }> | undefined): import("svelte/store").Unsubscriber;
};
export {};
